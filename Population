library(ggplot2)
library(dplyr)
library(lubridate)
library(sf)
library(scales)
library(raster)


########################## POPULATION COUNT ####################################

#National
# Read the population data CSV file
population_data <- read.csv("/Users/jamesbevan/Documents/1_Medicine & Public Health/Cambridge/MPhil Population Health/Dissertation/3. Data/Population_Count/Yearly/Population_Data_Districts_Angola_2000_2020.csv")
population_region_data <- read.csv("/Users/jamesbevan/Documents/1_Medicine & Public Health/Cambridge/MPhil Population Health/Dissertation/3. Data/Population_Count/Yearly/Population_Data_Regions_Angola_2000_2020.csv")

# Summarize the data to get the total population for each year
total_population_by_year <- population_data %>%
  group_by(year) %>%
  summarize(total_population = sum(total_population, na.rm = TRUE))

# Plot the population change over time with y-axis in millions
ggplot(total_population_by_year, aes(x = year, y = total_population)) +
  geom_line(color = "black", size = 1.2) +  # Increase the line thickness
  labs(
    title = "Population Change in Angola (2000-2020)",
    x = "Year",
    y = "Total Population (Millions)"
  ) +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16),  
    axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  
    axis.text.y = element_text(size = 12),  
    axis.title.x = element_text(size = 14),  
    axis.title.y = element_text(size = 14)   
  )



#District
pop_raster <- raster("/Users/jamesbevan/Documents/1_Medicine & Public Health/Cambridge/MPhil Population Health/Dissertation/3. Data/Population_Count/Population_Count_Angola_2020.tif")
pop_data <- raster::extract(pop_raster, angola_districts, fun = sum, na.rm = TRUE)
angola_districts$Total_Population <- pop_data

ggplot(data = angola_districts) +
  geom_sf(aes(fill = Total_Population), color = "black", size = 0.1) +  # Define the boundary color and size
  scale_fill_gradient(low = "white", high = "red", name = "Population") +  # Set color gradient from white (low) to red (high)
  labs(title = "Population per District in Angola",
       subtitle = "Based on 2020 data",
       fill = "Population") +
  theme_minimal() +
  theme(legend.position = "right", 
        plot.title = element_text(hjust = 0.5),
        plot.subtitle = element_text(hjust = 0.5),
        legend.title.align = 0.5)

#Change over time

# Baseline period (2000-2003)
baseline_years <- 2000:2000
baseline_df <- population_data %>%
  filter(year %in% baseline_years) %>%
  group_by(property) %>%
  summarize(baseline_avg = mean(total_population, na.rm = TRUE))

# Calculate averages for each five-year period
five_year_periods <- seq(2000, 2020, by = 5)
period_averages <- list()

for (start_year in four_year_periods) {
  end_year <- start_year +5
  period_df <- population_data %>%
    filter(year >= start_year & year <= end_year) %>%
    group_by(property) %>%
    summarize(period_avg = mean(total_population, na.rm = TRUE), .groups = 'drop') %>%
    mutate(period = paste(start_year, end_year, sep = "-"))
  
  period_averages[[paste(start_year, end_year)]] <- period_df
}

# Combine period averages into one dataframe
period_avg_df <- do.call(rbind, period_averages) %>%
  left_join(baseline_df, by = "property")

# Calculate the percentage change from the baseline
period_avg_df$Change <- ((period_avg_df$period_avg - period_avg_df$baseline_avg) / period_avg_df$baseline_avg) * 100

# Exclude baseline period from the final plot dataset
period_avg_df <- period_avg_df %>%
  filter(!period %in% paste(baseline_years[1], baseline_years[length(baseline_years)], sep = "-"))

# Join to spatial data for mapping
angola_districts_pop <- angola_districts %>%
  left_join(period_avg_df, by = c("NAME_2" = "property"))

# Plotting the change
ggplot(data = angola_districts_pop) +
  geom_sf(aes(fill = Change), color = NA) +
  scale_fill_gradient2(
    low = "blue", high = "red", mid = "white", midpoint = 0,
    name = "Change in Population (%)"
  ) +
  facet_wrap(~ period, nrow = 1) +
  labs(
    title = "Change in Population Relative to Baseline (2000-2003)",
    subtitle = "District population over 4-year periods",
    caption = ""
  ) +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    strip.text.x = element_text(size = 10, angle = 0, hjust = 0.5),
    panel.spacing = unit(1, "lines"),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank()
  )
########################## POPULATION DENSITY ##########################################

pop_density_summary<- read.csv("//Users/jamesbevan/Documents/1_Medicine & Public Health/Cambridge/MPhil Population Health/Dissertation/3. Data/Population_Density/Annual_Data/Pop_Density_Data.csv")


#Add to 2023
pop_density_2020 <- pop_density_summary %>%
  filter(Year == 2020) %>%
  select(District, Mean_PopDensity)

write.csv(pop_density_2020,"/Users/jamesbevan/Documents/1_Medicine & Public Health/Cambridge/MPhil Population Health/Dissertation/3. Data/Population_Density/Population_Density_2020.csv" )

district_case_data_2023 <- district_case_data_2023 %>%
  left_join(pop_density_2020, by = c("NAME_2" = "District"))

district_case_data_2023_PopDensity_LuandaNA <- district_case_data_2023 %>%
  mutate(Mean_PopDensity = if_else(NAME_2 == "Luanda", NA_real_, Mean_PopDensity))

ggplot(data = district_case_data_2023_PopDensity_LuandaNA) +
  geom_sf(aes(fill = Mean_PopDensity), color = "black", size = 0.5) +  # Set border color to black
  scale_fill_gradient(
    low = "white", 
    high = "red", 
    na.value = "black",  # Set NA values to appear black
    name = "Population per square km"
  ) +
  labs(
    title = "Average Population Density per District in Angola (2020)",
    subtitle = "Luanda excluded, population density = 5497 population per square km"
  ) +
  theme_minimal() +
  theme(
    legend.position = "right",
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks = element_blank(),
    panel.border = element_blank(),  # Remove the panel border
    panel.grid.major = element_blank(),  # Remove major grid lines
    panel.grid.minor = element_blank(),  # Remove minor grid lines
    panel.background = element_blank()  # Set the background color of the plot
  )

#Change in pop density over time
pop_density_changes <- pop_density_summary %>%
  filter(Year %in% c(2005, 2010, 2015, 2020)) %>%
  left_join(
    pop_density_summary %>% filter(Year == 2000) %>%
      select(District, Mean_PopDensity2000 = Mean_PopDensity),
    by = "District"
  ) %>%
  mutate(
    Percent_Change_from_2000 = ((Mean_PopDensity - Mean_PopDensity2000) / Mean_PopDensity2000) * 100
  )   # Set Luanda's changes to NA

pop_density_changes <- pop_density_changes %>%
  rename(NAME_2 = District)

pop_density_changes_sf <- angola_districts %>%
  select(NAME_2, geometry) %>%  # Make sure to select the geometry and the district name
  right_join(pop_density_changes, by = "NAME_2")

ggplot(data = pop_density_changes_sf) +
  geom_sf(aes(fill = Percent_Change_from_2000), color = "grey", size = 0.5) +
  scale_fill_gradient2(
    low = "blue", mid = "white", high = "red", midpoint = 0,
    na.value = "black",  # NA values will appear black
    name = "Percentage Change in Population Density",
    guide = guide_colourbar(barwidth = 20, barheight = 0.5)  # Adjust bar width and height for legend
  ) +
  labs(
    title = "Percentage Change in Population Density from 2000",
    caption = ""
  ) +
  facet_wrap(~Year, nrow = 1) +  # Horizontal faceting
  theme_minimal() +
  theme(
    legend.position = "bottom",
    legend.title = element_text(size = 10),  # Smaller legend title
    legend.text = element_text(size = 8),  # Smaller legend text
    legend.key.size = unit(0.5, "cm"),  # Smaller legend keys
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks = element_blank(),
    panel.border = element_blank(),
    strip.background = element_blank(),
    strip.text = element_text(size = 12),
    panel.grid.major = element_blank(),  # Remove major grid lines
    panel.grid.minor = element_blank()   # Remove minor grid lines
  )

# Calculate nominal population density for each specified year
pop_density_nominal <- pop_density_summary %>%
  filter(Year %in% c(2000, 2005, 2010, 2015, 2020)) %>%
  rename(NAME_2 = District)

pop_density_nominal_sf <- angola_districts %>%
  select(NAME_2, geometry) %>%  # Make sure to select the geometry and the district name
  right_join(pop_density_nominal, by = "NAME_2")

ggplot(data = pop_density_nominal_sf) +
  geom_sf(aes(fill = Mean_PopDensity), color = "black", size = 0.5) +
  scale_fill_gradient(
    low = "white", 
    high = "red", 
    na.value = "black",  # NA values will appear black
    name = "Population per square km"
  ) +
  labs(
    title = "Nominal Population Density per District in Angola",
    caption = "Data Source: Your Data Source Here"
  ) +
  facet_wrap(~Year, nrow = 1) +  # Horizontal faceting
  theme_minimal() +
  theme(
    legend.position = "bottom",
    legend.title = element_text(size = 10),  # Smaller legend title
    legend.text = element_text(size = 8),  # Smaller legend text
    legend.key.size = unit(0.5, "cm"),  # Smaller legend keys
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks = element_blank(),
    panel.border = element_blank(),
    strip.background = element_blank(),
    strip.text = element_text(size = 12, face = "bold")
  )


# Calculate nominal population density for each specified year
pop_density_nominal <- pop_density_summary %>%
  filter(Year %in% c(2000, 2005, 2010, 2015, 2020)) %>%
  rename(NAME_2 = District)

pop_density_nominal_sf <- angola_districts %>%
  select(NAME_2, geometry) %>%  # Make sure to select the geometry and the district name
  right_join(pop_density_nominal, by = "NAME_2")

ggplot(data = pop_density_nominal_sf) +
  geom_sf(aes(fill = Mean_PopDensity), color = "black", size = 0.5) +
  scale_fill_gradient(
    low = "white", 
    high = "red", 
    na.value = "black",  # NA values will appear black
    name = "Population per square km"
  ) +
  labs(
    title = "Nominal Population Density per District in Angola",
    caption = "Data Source: Your Data Source Here"
  ) +
  facet_wrap(~Year, nrow = 1) +  # Horizontal faceting
  theme_minimal() +
  theme(
    legend.position = "bottom",
    legend.title = element_text(size = 10),  # Smaller legend title
    legend.text = element_text(size = 8),  # Smaller legend text
    legend.key.size = unit(0.5, "cm"),  # Smaller legend keys
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks = element_blank(),
    panel.border = element_blank(),
    strip.background = element_blank(),
    strip.text = element_text(size = 12, face = "bold")
  )

